// This file is auto-generated by @hey-api/openapi-ts

import type { Client, Options as Options2, TDataShape } from './client';
import { client } from './client.gen';
import type { CreateTreatmentData, CreateTreatmentErrors, CreateTreatmentResponses, GetTreatmentsData, GetTreatmentsErrors, GetTreatmentsResponses, HealthCheckData, HealthCheckResponses, RegisterIntakeData, RegisterIntakeErrors, RegisterIntakeResponses } from './types.gen';

export type Options<TData extends TDataShape = TDataShape, ThrowOnError extends boolean = boolean> = Options2<TData, ThrowOnError> & {
    /**
     * You can provide a client instance returned by `createClient()` instead of
     * individual options. This might be also useful if you want to implement a
     * custom client.
     */
    client?: Client;
    /**
     * You can pass arbitrary values through the `meta` object. This can be
     * used to access values that aren't defined as part of the SDK function.
     */
    meta?: Record<string, unknown>;
};

/**
 * Health check
 */
export const healthCheck = <ThrowOnError extends boolean = false>(options?: Options<HealthCheckData, ThrowOnError>) => {
    return (options?.client ?? client).get<HealthCheckResponses, unknown, ThrowOnError>({
        url: '/health',
        ...options
    });
};

/**
 * Obtener todos los tratamientos de un usuario
 */
export const getTreatments = <ThrowOnError extends boolean = false>(options: Options<GetTreatmentsData, ThrowOnError>) => {
    return (options.client ?? client).get<GetTreatmentsResponses, GetTreatmentsErrors, ThrowOnError>({
        url: '/treatments',
        ...options
    });
};

/**
 * Crear tratamiento
 */
export const createTreatment = <ThrowOnError extends boolean = false>(options: Options<CreateTreatmentData, ThrowOnError>) => {
    return (options.client ?? client).post<CreateTreatmentResponses, CreateTreatmentErrors, ThrowOnError>({
        url: '/treatments',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Registrar toma de medicamento
 */
export const registerIntake = <ThrowOnError extends boolean = false>(options: Options<RegisterIntakeData, ThrowOnError>) => {
    return (options.client ?? client).post<RegisterIntakeResponses, RegisterIntakeErrors, ThrowOnError>({
        url: '/intakes',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};
